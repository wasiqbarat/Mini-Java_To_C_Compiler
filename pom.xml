<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ir.mz</groupId>
    <artifactId>mini-java-compiler</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>MiniJava to C Compiler</name>
    <description>Compile Mini-Java source code to Three-Address Code and C</description>
    <properties>
        <!-- Java language level -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- ANTLR -->
        <antlr4.version>4.13.1</antlr4.version>
    </properties>

    <dependencies>
        <!-- ANTLR runtime required at execution time -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>${antlr4.version}</version>
        </dependency>
        <!-- JUnit for future unit tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Generate lexer and parser from MiniJava.g4 -->
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>${antlr4.version}</version>
                <executions>
                    <execution>
                        <id>generate-antlrv4</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <configuration>
                            <!-- Path of the grammar; we keep it in src/ for now -->
                            <sourceDirectory>${project.basedir}/src</sourceDirectory>
                            <!-- Put generated sources where legacy files already sit -->
                            <outputDirectory>${project.basedir}/src/gen</outputDirectory>
                            <visitor>true</visitor>
                            <listener>true</listener>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Standard Java compiler setup -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- Allow running the project with: mvn exec:java -Dexec.mainClass="cli.Main" (main class to be added later) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
    </repositories>

</project>
